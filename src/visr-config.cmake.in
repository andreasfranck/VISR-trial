@PACKAGE_INIT@

if( POLICY CMP0057 )
  CMAKE_POLICY(SET CMP0057 NEW)
else( POLICY CMP0057 )
  message( FATAL_ERROR "Policy CMP0057 not supported (IN_LIST operator), although CMake version requirement is met.")
endif( POLICY CMP0057 )


set( _supported_components
 3rd_party_shared
 3rd_party_static
 shared_libraries 
 static_libraries 
 static_pic_libraries
 development_files
)

if(NOT VISR_FIND_COMPONENTS)
  set(VISR_FIND_COMPONENTS ${_supported_components})
endif(NOT VISR_FIND_COMPONENTS)

message( STATUS "VISR_FIND_COMPONENTS: " ${VISR_FIND_COMPONENTS} )

foreach(_comp ${VISR_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _supported_components)
    set(VISR_FOUND False)
    set(VISR_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/visr-${_comp}-targets.cmake")
endforeach()

# set( VISR_STATIC_LIBRARIES @BUILD_INSTALL_STATIC_LIBRARIES@ )
# set( VISR_STATIC_PIC_LIBRARIES @BUILD_INSTALL_STATIC_PIC_LIBRARIES@ )
# set( VISR_SHARED_LIBRARIES @BUILD_INSTALL_SHARED_LIBRARIES@ )
# List of the installed VISR library (w/o suffixes)
set( VISR_LIBRARIES @VISR_LIBRARIES@ )

set( VISR_USE_STATIC_BOOST_LIBRARIES @Boost_USE_STATIC_LIBS@ )
set( VISR_USE_SNDFILE_LIBRARY @BUILD_USE_SNDFILE_LIBRARY@ )
set( VISR_THREAD_SUPPORT_DISABLED @BUILD_DISABLE_THREADS@ )
set( VISR_AUDIOINTERFACES_PORTAUDIO @BUILD_AUDIOINTERFACES_PORTAUDIO@ )
set( VISR_AUDIOINTERFACES_JACK @BUILD_AUDIOINTERFACES_JACK@ )

include(CMakeFindDependencyMacro)

set( Boost_USE_MULTITHREADED @Boost_USE_MULTITHREADED@ )
set( Boost_USE_STATIC_LIBS @Boost_USE_STATIC_LIBS@ )

find_dependency(Boost @Boost_VERSION_STRING@ EXACT
  COMPONENTS @VISR_BOOST_LIBRARIES@ )

if( ( static_libraries IN_LIST VISR_FIND_COMPONENTS ) 
  OR ( static_pic_libraries IN_LIST VISR_FIND_COMPONENTS ) )
  # Export dependencies for exported static targets (incl. static_pic)
  # if any of these variants is built.
  if( NOT ${VISR_THREAD_SUPPORT_DISABLED} )
    find_dependency( Threads )
  endif( NOT ${VISR_THREAD_SUPPORT_DISABLED} )

  # Note: we do not list the dependencies SndFile, Portaudio, Jack 
  # here, because they are non-standard and cannot imported through 
  # an export config. I.e., it would require a FindXXX.cmake file in
  # every dependent project.
endif( ( static_libraries IN_LIST VISR_FIND_COMPONENTS ) 
  OR ( static_pic_libraries IN_LIST VISR_FIND_COMPONENTS ) )

# import targets
# TODO: Do I need that anymore?
include(${CMAKE_CURRENT_LIST_DIR}/visr_exports.cmake)

# Check whether the requirements of the exported targets are met.
include(CMakePackageConfigHelpers)
foreach( lib ${VISR_LIBRARIES} )
  if( shared_libraries IN_LIST VISR_FIND_COMPONENTS )
    check_required_components( ${lib}_shared )
  endif( shared_libraries IN_LIST VISR_FIND_COMPONENTS )
  if( static_libraries IN_LIST VISR_FIND_COMPONENTS )
    check_required_components( ${lib}_static )
  endif(  static_libraries IN_LIST VISR_FIND_COMPONENTS )
  if( static_pic_libraries IN_LIST VISR_FIND_COMPONENTS )
    check_required_components( ${lib}_static_pic )
  endif( static_pic_libraries IN_LIST VISR_FIND_COMPONENTS )
endforeach( lib ${VISR_LIBRARIES} )
